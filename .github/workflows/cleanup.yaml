name: Cleanup

on:
  workflow_dispatch:
    inputs:
      stackName:
        description: "Name of the stack to clean"
        required: true

env:
  CI: 1
  FORCE_COLOR: 3
  JSII_SILENCE_WARNING_UNTESTED_NODE_VERSION: 1
  COAP_SIMULATOR_DOWNLOAD_URL: ${{ secrets.COAP_SIMULATOR_DOWNLOAD_URL }}
  STACK_NAME: ${{ github.event.inputs.stackName }}

jobs:
  cleanup:
    runs-on: ubuntu-22.04

    environment: ci

    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - name: store checkout out version
        id: ref
        run: echo "ref=${{ github.sha }}" >> $GITHUB_OUTPUT

      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Keep npm cache around to speed up installs
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: build-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci --no-audit

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: github-action-hello-nrfcloud-backend
          aws-region: ${{ vars.AWS_REGION }}

      - name: Clean up End-to-End test resources
        run: |
          ./cli.sh logs -X
          npx cdk destroy --all -f
          npx cdk --app 'npx tsx --no-warnings cdk/test-resources.ts' destroy -f
          ./cli.sh fake-nrfcloud-account-device nordic --remove
          ./cli.sh configure-nrfcloud-account nordic apiEndpoint -X
          ./cli.sh configure-nrfcloud-account nordic apiKey -X
          ./cli.sh fake-nrfcloud-account-device elite --remove
          ./cli.sh configure-nrfcloud-account elite apiEndpoint -X
          ./cli.sh configure-nrfcloud-account elite apiKey -X
          ./cli.sh clean-backup-certificates
          aws ecr delete-repository --force --repository-name ${{ env.STACK_NAME }}-coap-simulator
          aws ecr delete-repository --force --repository-name ${{ env.STACK_NAME }}-openssl-layer
          aws ecr delete-repository --force --repository-name ${{ env.STACK_NAME }}-mqtt-bridge
